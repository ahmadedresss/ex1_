#include<stdio.h>
#include<string.h>
#include "AsciiArtTool.h"
#include"RLEList.h"

#define ENCODED "-e"
#define INVERTED "-i"
#define SPACE ' '
#define AT_SIGN '@'
#define ARGC 4
#define FLAG 1
#define SOURCE 2
#define TARGET 3




char invert(char value)
{
    if(value==AT_SIGN)
    {
        return SPACE;
    }
    if(value==SPACE)
    {
        return AT_SIGN;
    }
    return value;
}


/*RLEListResult convert(char* flag, RLEList list, FILE* out_stream)
{

    RLEListResult result;
    if(!strcmp(flag,INVERTED))
    {
        result = RLEListMap(list,invert);
        if(result!=RLE_LIST_SUCCESS)
        {
            return result;
        }
        result = asciiArtPrint(list,out_stream);
        return result;
    }
    result = asciiArtPrintEncoded(list,out_stream);
    return result;
}
*/

int main(int argc, char **argv)
{
    if(argc!=ARGC)
    {
        return 0;
    }
    if(strcmp(argv[FLAG],INVERTED) && strcmp(argv[FLAG],ENCODED))
    {
        return 0;
    }
    FILE* in_stream = fopen(argv[SOURCE],"r");
    if(!in_stream)
    {
        return 0;
    }
    FILE* out_stream = fopen(argv[TARGET],"w");
    if(!out_stream)
    {
        fclose(in_stream);
        return 0;
    }

    RLEList List = asciiArtRead(in_stream);
    if(!List)
    {
        fclose(in_stream);
        fclose(out_stream);
        return 0;
    }
    //RLEListResult result = convert(argv[FLAG],List,out_stream);
    RLEListResult result;
    if(!strcmp(argv[FLAG],INVERTED))
    {
        result = RLEListMap(List,invert);
        if(result!=RLE_LIST_SUCCESS)
        {
            return 0;
        }
        result = asciiArtPrint(List,out_stream);
    }
    result = asciiArtPrintEncoded(List,out_stream);
    
    
    if(result!=RLE_LIST_SUCCESS)
    {
        RLEListDestroy(List);
        fclose(in_stream);
        fclose(out_stream);
        return 0;
    }
    RLEListDestroy(List);
    fclose(in_stream);
    fclose(out_stream);
    return 0;
}
